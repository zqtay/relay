{"version":3,"file":"static/js/642.87af6706.chunk.js","mappings":"6NAiBMA,EAAc,WAChB,OACI,iCACI,gBAAKC,UAAU,GAAGC,IAAKC,KACvB,oJAMX,EAEKC,EAAgB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACI,mBAAQC,KAAK,SAASL,UAAU,uCAAuCI,QAASA,EAAhF,sBAIP,EAED,EAjCmB,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACxB,OACA,SAACC,EAAA,EAAD,CACIF,KAAMA,EACNG,KAAK,iBACLC,MAAM,cACNC,SAAS,SAACZ,EAAD,IACTa,YAAY,SAACT,EAAD,CAAeC,QAASG,IACpCA,QAASA,GAGhB,C,8ECSKM,EAAoB,SAACC,EAAKC,IAC5BC,EAAAA,EAAAA,YAAU,WAIN,SAASC,EAAmBC,GACpBJ,EAAIK,UAAYL,EAAIK,QAAQC,SAASF,EAAMG,SAC3CN,GAEP,CAGD,OADAO,SAASC,iBAAiB,YAAaN,GAChC,WAEHK,SAASE,oBAAoB,YAAaP,EAC7C,CACJ,GAAE,CAACH,GACP,EAEKW,EAAe,SAAC,GAA8B,IAA5BhB,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOH,EAAc,EAAdA,QACjC,OACI,iBAAKP,UAAU,eAAf,WACI,iBAAMA,UAAU,yBAAhB,UACI,cAAGA,UAAS,yBAAoBS,QAEpC,eAAIT,UAAU,mBAAd,SAAkCU,KAClC,iBAAMV,UAAU,gBAAgBI,QAASG,EAAzC,UACI,cAAGP,UAAU,4DAI5B,EAEK0B,EAAe,SAAC,GAAuC,IAArCd,EAAoC,EAApCA,WAAYe,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC3C,OACI,iBAAK5B,UAAU,eAAf,UACK4B,EACAD,EACAf,IAGZ,EAED,EA/De,SAAC,GAA4E,IAA1EN,EAAyE,EAAzEA,KAAMG,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,WAAYe,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAQrB,EAAc,EAAdA,QACnEsB,EAAgBvB,EAAO,OAAS,SAChCwB,GAAYC,EAAAA,EAAAA,QAAO,MAGzB,OAFAlB,EAAkBiB,EAAWvB,IAGzB,gBAAKP,UAAS,gBAAW6B,GAAzB,UACI,gBAAK7B,UAAU,6DAAf,UACI,iBAAKA,UAAU,0BAA0Bc,IAAKgB,EAA9C,WACI,SAACL,EAAD,CAAchB,KAAMA,EAAMC,MAAOA,EAAOH,QAASA,KACjD,gBAAKP,UAAU,aAAf,SACKW,KAEL,SAACe,EAAD,CAAcd,WAAYA,EAAYe,UAAWA,EAAWC,OAAQA,UAKvF,C","sources":["components/Dialog/InfoDialog.js","components/UI/Dialog.js"],"sourcesContent":["import example from \"./example.png\";\r\n\r\nimport Dialog from \"../UI/Dialog\";\r\n\r\nconst InfoDialog = ({ show, dismiss }) => {\r\n    return (\r\n    <Dialog\r\n        show={show}\r\n        icon=\"fa-circle-info\"\r\n        title=\"How To Play\"\r\n        content={<InfoContent />}\r\n        btnConfirm={<ButtonConfirm onClick={dismiss} />}\r\n        dismiss={dismiss}\r\n    />\r\n    );\r\n};\r\n\r\nconst InfoContent = () => {\r\n    return (\r\n        <>\r\n            <img className=\"\" src={example} />\r\n            <div>\r\n                Fill in the blanks with the given alphabets.\r\n                The end of the current word must match with the start of the next word.\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst ButtonConfirm = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary modal-confirm-button\" onClick={onClick}>\r\n            I got it!\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default InfoDialog;\r\n","import \"./Dialog.css\"\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Dialog = ({ show, icon, title, content, btnConfirm, btnCancel, status, dismiss }) => {\r\n    const showClassName = show ? \"show\" : \"hidden\";\r\n    const dialogRef = useRef(null);\r\n    useOutsideHandler(dialogRef, dismiss);\r\n\r\n    return (\r\n        <div className={`modal ${showClassName}`}>\r\n            <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                <div className=\"modal-content shadow-sm\" ref={dialogRef}>\r\n                    <DialogHeader icon={icon} title={title} dismiss={dismiss} />\r\n                    <div className=\"modal-body\">\r\n                        {content}\r\n                    </div>\r\n                    <DialogFooter btnConfirm={btnConfirm} btnCancel={btnCancel} status={status} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useOutsideHandler = (ref, callback) => {\r\n    useEffect(() => {\r\n        /**\r\n         * Handle if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                callback();\r\n            }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst DialogHeader = ({ icon, title, dismiss }) => {\r\n    return (\r\n        <div className=\"modal-header\">\r\n            <span className=\"fa-lg modal-title-icon\">\r\n                <i className={`fa-solid fa-lg ${icon}`}></i>\r\n            </span>\r\n            <h4 className=\"modal-title ms-2\">{title}</h4>\r\n            <span className=\"fa-lg ms-auto\" onClick={dismiss}>\r\n                <i className=\"fa-solid fa-lg fa-circle-xmark modal-dismiss-button\"></i>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogFooter = ({ btnConfirm, btnCancel, status }) => {\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            {status}\r\n            {btnCancel}\r\n            {btnConfirm}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;"],"names":["InfoContent","className","src","example","ButtonConfirm","onClick","type","show","dismiss","Dialog","icon","title","content","btnConfirm","useOutsideHandler","ref","callback","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","DialogHeader","DialogFooter","btnCancel","status","showClassName","dialogRef","useRef"],"sourceRoot":""}