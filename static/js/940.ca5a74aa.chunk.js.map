{"version":3,"file":"static/js/940.ca5a74aa.chunk.js","mappings":"0IAeMA,EAAmB,SAACC,EAAQC,GAC9B,OAAQD,EAAOE,OAAM,SAACC,EAAGC,GAAJ,OAAUD,IAAMF,EAASG,EAAzB,GACxB,EAEKC,EAAiB,SAAC,GAA+B,IAA7BL,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,SAAUK,EAAU,EAAVA,IACxC,OACI,iCACI,yDACgCP,EAAiBC,EAAQC,IAAzB,mCADhC,QAGA,gBAAKM,UAAU,kBAAkBC,QAAS,WAAQC,UAAUC,UAAUC,UAAUL,EAAM,EAAtF,qBAKX,EAED,UA7BsB,SAAC,GAA8C,IAA5CM,EAA2C,EAA3CA,KAAMZ,EAAqC,EAArCA,OAAQC,EAA6B,EAA7BA,SAAUK,EAAmB,EAAnBA,IAAKO,EAAc,EAAdA,QAClD,OACI,SAAC,IAAD,CACID,KAAMA,EACNE,KAAK,YACLC,MAAM,UACNC,SAAS,SAACX,EAAD,CAAgBL,OAAQA,EAAQC,SAAUA,EAAUK,IAAKA,IAClEO,QAASA,GAGpB,C,8ECWKI,EAAoB,SAACC,EAAKC,IAC5BC,EAAAA,EAAAA,YAAU,WAIN,SAASC,EAAmBC,GACpBJ,EAAIK,UAAYL,EAAIK,QAAQC,SAASF,EAAMG,SAC3CN,GAEP,CAGD,OADAO,SAASC,iBAAiB,YAAaN,GAChC,WAEHK,SAASE,oBAAoB,YAAaP,EAC7C,CACJ,GAAE,CAACH,GACP,EAEKW,EAAe,SAAC,GAA8B,IAA5Bf,EAA2B,EAA3BA,KAAMC,EAAqB,EAArBA,MAAOF,EAAc,EAAdA,QACjC,OACI,iBAAKN,UAAU,eAAf,WACI,iBAAMA,UAAU,yBAAhB,UACI,cAAGA,UAAS,yBAAoBO,QAEpC,eAAIP,UAAU,mBAAd,SAAkCQ,KAClC,iBAAMR,UAAU,gBAAgBC,QAASK,EAAzC,UACI,cAAGN,UAAU,4DAI5B,EAEKuB,EAAe,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC3C,OACI,iBAAK1B,UAAU,eAAf,UACK0B,EACAD,EACAD,IAGZ,EAED,EA/De,SAAC,GAA4E,IAA1EnB,EAAyE,EAAzEA,KAAME,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,QAASe,EAA6C,EAA7CA,WAAYC,EAAiC,EAAjCA,UAAWC,EAAsB,EAAtBA,OAAQpB,EAAc,EAAdA,QACnEqB,EAAgBtB,EAAO,OAAS,SAChCuB,GAAYC,EAAAA,EAAAA,QAAO,MAGzB,OAFAnB,EAAkBkB,EAAWtB,IAGzB,gBAAKN,UAAS,gBAAW2B,GAAzB,UACI,gBAAK3B,UAAU,6DAAf,UACI,iBAAKA,UAAU,0BAA0BW,IAAKiB,EAA9C,WACI,SAACN,EAAD,CAAcf,KAAMA,EAAMC,MAAOA,EAAOF,QAASA,KACjD,gBAAKN,UAAU,aAAf,SACKS,KAEL,SAACc,EAAD,CAAcC,WAAYA,EAAYC,UAAWA,EAAWC,OAAQA,UAKvF,C","sources":["components/Dialog/ResultsDialog.js","components/UI/Dialog.js"],"sourcesContent":["import Dialog from \"../UI/Dialog\";\r\nimport { CurrentGame } from \"../../game/Game\";\r\n\r\nconst ResultsDialog = ({ show, inputs, solution, url, dismiss }) => {\r\n    return (\r\n        <Dialog\r\n            show={show}\r\n            icon=\"fa-trophy\"\r\n            title=\"Success\"\r\n            content={<ResultsContent inputs={inputs} solution={solution} url={url} />}\r\n            dismiss={dismiss}\r\n        />\r\n    );\r\n};\r\n\r\nconst checkAltSolution = (inputs, solution) => {\r\n    return !inputs.every((v, i) => v === solution[i]);\r\n};\r\n\r\nconst ResultsContent = ({ inputs, solution, url }) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                You have solved this puzzle{checkAltSolution(inputs, solution) && ` and found an alternate solution`}!\r\n            </div>\r\n            <div className=\"btn btn-default\" onClick={() => { navigator.clipboard.writeText(url) }}>\r\n                Share\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ResultsDialog;","import \"./Dialog.css\"\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Dialog = ({ show, icon, title, content, btnConfirm, btnCancel, status, dismiss }) => {\r\n    const showClassName = show ? \"show\" : \"hidden\";\r\n    const dialogRef = useRef(null);\r\n    useOutsideHandler(dialogRef, dismiss);\r\n\r\n    return (\r\n        <div className={`modal ${showClassName}`}>\r\n            <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                <div className=\"modal-content shadow-sm\" ref={dialogRef}>\r\n                    <DialogHeader icon={icon} title={title} dismiss={dismiss} />\r\n                    <div className=\"modal-body\">\r\n                        {content}\r\n                    </div>\r\n                    <DialogFooter btnConfirm={btnConfirm} btnCancel={btnCancel} status={status} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useOutsideHandler = (ref, callback) => {\r\n    useEffect(() => {\r\n        /**\r\n         * Handle if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                callback();\r\n            }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst DialogHeader = ({ icon, title, dismiss }) => {\r\n    return (\r\n        <div className=\"modal-header\">\r\n            <span className=\"fa-lg modal-title-icon\">\r\n                <i className={`fa-solid fa-lg ${icon}`}></i>\r\n            </span>\r\n            <h4 className=\"modal-title ms-2\">{title}</h4>\r\n            <span className=\"fa-lg ms-auto\" onClick={dismiss}>\r\n                <i className=\"fa-solid fa-lg fa-circle-xmark modal-dismiss-button\"></i>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogFooter = ({ btnConfirm, btnCancel, status }) => {\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            {status}\r\n            {btnCancel}\r\n            {btnConfirm}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;"],"names":["checkAltSolution","inputs","solution","every","v","i","ResultsContent","url","className","onClick","navigator","clipboard","writeText","show","dismiss","icon","title","content","useOutsideHandler","ref","callback","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","DialogHeader","DialogFooter","btnConfirm","btnCancel","status","showClassName","dialogRef","useRef"],"sourceRoot":""}