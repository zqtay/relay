{"version":3,"file":"static/js/710.b3ec361d.chunk.js","mappings":"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","sources":["components/Dialog/InfoDialog.js","components/UI/Dialog.js"],"sourcesContent":["import \"./InfoDialog.css\";\r\nimport example from \"./example.png\";\r\n\r\nimport { memo } from \"react\";\r\n\r\nimport Dialog from \"../UI/Dialog\";\r\n\r\nconst InfoDialog = ({ show, dismiss }) => {\r\n    return (\r\n        <Dialog\r\n            show={show}\r\n            icon=\"fa-circle-info\"\r\n            title=\"How To Play\"\r\n            content={<InfoContent />}\r\n            btnConfirm={<ButtonConfirm onClick={dismiss} />}\r\n            dismiss={dismiss}\r\n        />\r\n    );\r\n};\r\n\r\nconst InfoContent = () => {\r\n    return (\r\n        <div className=\"\">\r\n            <div className=\"info-dialog-image-container\">\r\n                <img className=\"info-dialog-image\" src={example} />\r\n            </div>\r\n            <ul className=\"info-dialog-text\">\r\n                <li>\r\n                    Fill in the blanks with the <b>given alphabets</b>.\r\n                </li>\r\n                <li>\r\n                    The <b>end</b> of the current word must <b>match</b> with the <b>start</b> of the next word.\r\n                </li>\r\n                <li>\r\n                    Use <b>hints</b> if you are stuck!\r\n                </li>\r\n            </ul>\r\n            <hr></hr>\r\n            <div className=\"row info-dialog-text\">\r\n                <div className=\"col\">\r\n                    <ButtonGuide icon=\"fa-solid fa-rotate-right\" text={<><b>Clear</b> board</>}/>\r\n                    <ButtonGuide icon=\"fa-solid fa-square-h\" text={<><b>Reveal</b> hint</>}/>\r\n                    <ButtonGuide icon=\"fa-solid fa-circle-check\" text={<><b>Submit</b> solution</>}/>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <ButtonGuide icon=\"fa-solid fa-spell-check\" text={<><b>Check</b> current word</>}/>\r\n                    <ButtonGuide icon=\"fa-solid fa-left-long\" text={<><b>Backspace</b></>}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ButtonConfirm = ({ onClick }) => {\r\n    return (\r\n        <button type=\"button\" className=\"btn btn-primary modal-confirm-button\" onClick={onClick}>\r\n            I got it!\r\n        </button>\r\n    );\r\n};\r\n\r\nconst ButtonGuide = ({icon, text}) => {\r\n    return (\r\n        <div className=\"d-flex align-items-center mb-2\">\r\n            <i className={`fa-2x ${icon} me-2 info-dialog-button-guide-icon`}></i>\r\n            <span>{text}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default memo(InfoDialog);\r\n","import \"./Dialog.css\"\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\n\r\nconst Dialog = ({ show, icon, title, content, btnConfirm, btnCancel, status, dismiss }) => {\r\n    const showClassName = show ? \"show\" : \"hidden\";\r\n    const dialogRef = useRef(null);\r\n    useOutsideHandler(dialogRef, dismiss);\r\n\r\n    return (\r\n        <div className={`modal ${showClassName}`}>\r\n            <div className=\"modal-dialog modal-dialog-centered modal-dialog-scrollable\">\r\n                <div className=\"modal-content shadow-sm\" ref={dialogRef}>\r\n                    <DialogHeader icon={icon} title={title} dismiss={dismiss} />\r\n                    <div className=\"modal-body\">\r\n                        {content}\r\n                    </div>\r\n                    <DialogFooter btnConfirm={btnConfirm} btnCancel={btnCancel} status={status} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useOutsideHandler = (ref, callback) => {\r\n    useEffect(() => {\r\n        /**\r\n         * Handle if clicked on outside of element\r\n         */\r\n        function handleClickOutside(event) {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n                callback();\r\n            }\r\n        }\r\n        // Bind the event listener\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    }, [ref]);\r\n}\r\n\r\nconst DialogHeader = ({ icon, title, dismiss }) => {\r\n    return (\r\n        <div className=\"modal-header\">\r\n            <span className=\"fa-lg modal-title-icon\">\r\n                <i className={`fa-solid fa-lg ${icon}`}></i>\r\n            </span>\r\n            <h4 className=\"modal-title ms-2\">{title}</h4>\r\n            <span className=\"fa-lg ms-auto\" onClick={dismiss}>\r\n                <i className=\"fa-solid fa-lg fa-circle-xmark modal-dismiss-button\"></i>\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst DialogFooter = ({ btnConfirm, btnCancel, status }) => {\r\n    return (\r\n        <div className=\"modal-footer\">\r\n            {status}\r\n            {btnCancel}\r\n            {btnConfirm}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialog;"],"names":["InfoDialog","show","dismiss","Dialog","icon","title","content","InfoContent","btnConfirm","ButtonConfirm","onClick","className","src","example","ButtonGuide","text","type","memo","useOutsideHandler","ref","callback","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","DialogHeader","DialogFooter","btnCancel","status","showClassName","dialogRef","useRef"],"sourceRoot":""}